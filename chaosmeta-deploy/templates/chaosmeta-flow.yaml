
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-flow-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: chaosmeta-flow-operator
  name: chaosmeta-flow-controller-manager
  namespace: chaosmeta
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-flow-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: chaosmeta-flow-operator
  name: chaosmeta-flow-leader-election-role
  namespace: chaosmeta
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: chaosmeta-flow-manager-role
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - chaosmeta.io
  resources:
  - loadtests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - chaosmeta.io
  resources:
  - loadtests/finalizers
  verbs:
  - update
- apiGroups:
  - chaosmeta.io
  resources:
  - loadtests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
- apiGroups:
    - certificates.k8s.io
  resources:
    - certificatesigningrequests
  verbs:
    - get
    - list
    - watch
    - create
    - update
    - delete
- apiGroups:
    - certificates.k8s.io
  resources:
    - certificatesigningrequests/status
    - certificatesigningrequests/approval
  verbs:
    - update
- apiGroups:
    - certificates.k8s.io
  resources:
    - signers
  resourceNames:
    - kubernetes.io/kubelet-serving # example.com/* 可用于为 “example.com” 域中的所有签名者授权
  verbs:
    - sign
    - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-flow-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: chaosmeta-flow-operator
  name: chaosmeta-flow-leader-election-rolebinding
  namespace: chaosmeta
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chaosmeta-flow-leader-election-role
subjects:
- kind: ServiceAccount
  name: chaosmeta-flow-controller-manager
  namespace: chaosmeta
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-flow-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: chaosmeta-flow-operator
  name: chaosmeta-flow-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaosmeta-flow-manager-role
subjects:
- kind: ServiceAccount
  name: chaosmeta-flow-controller-manager
  namespace: chaosmeta
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: chaosmeta-flow-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: chaosmeta-flow-operator
  name: chaosmeta-flow-webhook-service
  namespace: chaosmeta
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
    app: chaosmeta-flow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: chaosmeta-flow-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: chaosmeta-flow-operator
    control-plane: controller-manager
  name: chaosmeta-flow-controller-manager
  namespace: chaosmeta
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app: chaosmeta-flow
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app: chaosmeta-flow
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        image: registry.cn-hangzhou.aliyuncs.com/chaosmeta/chaosmeta-flow-controller:v0.0.6
        env:
        - name: DEFAULTNAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
          - mountPath: /workspace/config/chaosmeta-flow.json
            name: config-volume
            subPath: chaosmeta-flow.json
      securityContext:
        runAsNonRoot: true
      serviceAccountName: chaosmeta-flow-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - configMap:
            name: chaosmeta-flow-config
          name: config-volume
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: chaosmeta-flow-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: chaosmeta-flow-webhook-service
      namespace: chaosmeta
      path: /mutate-chaosmeta-io-v1alpha1-loadtest
  failurePolicy: Fail
  name: mloadtest.kb.io
  rules:
  - apiGroups:
    - chaosmeta.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - loadtests
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: chaosmeta-flow-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: chaosmeta-flow-webhook-service
      namespace: chaosmeta
      path: /validate-chaosmeta-io-v1alpha1-loadtest
  failurePolicy: Fail
  name: vloadtest.kb.io
  rules:
  - apiGroups:
    - chaosmeta.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - loadtests
  sideEffects: None

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chaosmeta-flow-config
  namespace: chaosmeta
data:
  chaosmeta-flow.json: |-
    {
      "executor": {
        "image": "registry.cn-hangzhou.aliyuncs.com/chaosmeta/chaosmeta-jmeter:v1.0.0",
        "resource": {
          "cpu": "0",
          "memory": "1Gi"
        },
        "namespace": "chaosmeta"
      }
    }
