apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  name: experiments.chaosmeta.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: chaosmeta-inject-webhook-service
          namespace: DEPLOYNAMESPACE
          path: /convert
      conversionReviewVersions:
      - v1
  group: chaosmeta.io
  names:
    kind: Experiment
    listKind: ExperimentList
    plural: experiments
    singular: experiment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Experiment is the Schema for the experiments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExperimentSpec defines the desired state of Experiment
            properties:
              experiment:
                properties:
                  args:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        valueType:
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  duration:
                    description: Duration support "h", "m", "s"
                    type: string
                  fault:
                    type: string
                  target:
                    type: string
                required:
                - fault
                - target
                type: object
              rangeMode:
                properties:
                  type:
                    description: 'Type Optional: all、percent、count'
                    type: string
                  value:
                    type: integer
                required:
                - type
                type: object
              scope:
                description: 'Scope Optional: node, pod. type of experiment object'
                type: string
              selector:
                description: Selector The internal part of unit is "AND", and the external part is "OR" and de-duplication
                items:
                  properties:
                    ip:
                      items:
                        type: string
                      type: array
                    label:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      items:
                        type: string
                      type: array
                    namespace:
                      type: string
                    subName:
                      type: string
                  type: object
                type: array
              targetPhase:
                type: string
            required:
            - experiment
            - scope
            - targetPhase
            type: object
          status:
            description: ExperimentStatus defines the observed state of Experiment
            properties:
              createTime:
                type: string
              detail:
                properties:
                  inject:
                    items:
                      properties:
                        backup:
                          type: string
                        injectObjectName:
                          type: string
                        message:
                          type: string
                        startTime:
                          type: string
                        status:
                          type: string
                        uid:
                          description: InjectObjectInfo string     `json:"injectObjectInfo,omitempty"`
                          type: string
                        updateTime:
                          type: string
                      type: object
                    type: array
                  recover:
                    items:
                      properties:
                        backup:
                          type: string
                        injectObjectName:
                          type: string
                        message:
                          type: string
                        startTime:
                          type: string
                        status:
                          type: string
                        uid:
                          description: InjectObjectInfo string     `json:"injectObjectInfo,omitempty"`
                          type: string
                        updateTime:
                          type: string
                      type: object
                    type: array
                type: object
              message:
                type: string
              phase:
                type: string
              status:
                type: string
              updateTime:
                type: string
            required:
            - createTime
            - detail
            - message
            - phase
            - status
            - updateTime
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-inject-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: chaosmeta-inject-operator
  name: chaosmeta-inject-controller-manager
  namespace: DEPLOYNAMESPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-inject-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: chaosmeta-inject-operator
  name: chaosmeta-inject-leader-election-role
  namespace: DEPLOYNAMESPACE
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: chaosmeta-inject-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - batchs
  resources:
  - jobs
  verbs:
  - '*'
- apiGroups:
  - chaosmeta.io
  resources:
  - experiments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - chaosmeta.io
  resources:
  - experiments/finalizers
  verbs:
  - update
- apiGroups:
  - chaosmeta.io
  resources:
  - experiments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  - nodes
  - pods
  - pods/exec
  - services
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-inject-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: chaosmeta-inject-operator
  name: chaosmeta-inject-leader-election-rolebinding
  namespace: DEPLOYNAMESPACE
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chaosmeta-inject-leader-election-role
subjects:
- kind: ServiceAccount
  name: chaosmeta-inject-controller-manager
  namespace: DEPLOYNAMESPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: chaosmeta-inject-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: chaosmeta-inject-operator
  name: chaosmeta-inject-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaosmeta-inject-manager-role
subjects:
- kind: ServiceAccount
  name: chaosmeta-inject-controller-manager
  namespace: DEPLOYNAMESPACE
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: chaosmeta-inject-operator
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: chaosmeta-inject-operator
  name: chaosmeta-inject-webhook-service
  namespace: DEPLOYNAMESPACE
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
    app: chaosmeta-inject
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: chaosmeta-inject-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: chaosmeta-inject-operator
    control-plane: controller-manager
  name: chaosmeta-inject-controller-manager
  namespace: DEPLOYNAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app: chaosmeta-inject
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app: chaosmeta-inject
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        image: DEPLOYREGISTRY/chaosmeta-inject-controller:v0.1.2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /config/chaosmeta-inject.json
          name: config-volume
          subPath: chaosmeta-inject.json
      securityContext:
        runAsNonRoot: true
      serviceAccountName: chaosmeta-inject-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: chaosmeta-inject-webhook-server-cert
      - configMap:
          name: chaosmeta-inject-config
        name: config-volume
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: chaosmeta-inject-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: chaosmeta-inject-webhook-service
      namespace: DEPLOYNAMESPACE
      path: /mutate-chaosmeta-io-v1alpha1-experiment
  failurePolicy: Fail
  name: mexperiment.kb.io
  rules:
  - apiGroups:
    - chaosmeta.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - experiments
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: chaosmeta-inject-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: chaosmeta-inject-webhook-service
      namespace: DEPLOYNAMESPACE
      path: /validate-chaosmeta-io-v1alpha1-experiment
  failurePolicy: Fail
  name: vexperiment.kb.io
  rules:
  - apiGroups:
    - chaosmeta.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - experiments
  sideEffects: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chaosmeta-inject-config
  namespace: DEPLOYNAMESPACE
data:
  chaosmeta-inject.json: |-
    {
      "worker": {
        "poolCount": 16
      },
      "ticker": {
        "autoCheckInterval": 2
      },
      "executor": {
        "mode": "daemonset",
        "executor": "chaosmetad",
        "version": "0.3.9",
        "agentConfig": {
          "agentPort": 29595
        },
        "daemonsetConfig": {
          "localExecPath": "/tmp",
          "daemonNs": "DEPLOYNAMESPACE",
          "daemonLabel": {
            "app.chaosmeta.io": "chaosmeta-daemon"
          }
        }
      }
    }
